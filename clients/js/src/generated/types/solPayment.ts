/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Context, PublicKey, Serializer } from '@metaplex-foundation/umi';

/**
 * Guard that charges an amount in SOL (lamports) for the mint.
 *
 * List of accounts required:
 *
 * 0. `[]` Account to receive the funds.
 */

export type SolPayment = { lamports: bigint; destination: PublicKey };

export type SolPaymentArgs = {
  lamports: number | bigint;
  destination: PublicKey;
};

export function getSolPaymentSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<SolPaymentArgs, SolPayment> {
  const s = context.serializer;
  return s.struct<SolPayment>(
    [
      ['lamports', s.u64()],
      ['destination', s.publicKey()],
    ],
    { description: 'SolPayment' }
  ) as Serializer<SolPaymentArgs, SolPayment>;
}
