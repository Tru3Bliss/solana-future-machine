/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Context, PublicKey, Serializer } from '@metaplex-foundation/umi';

/**
 * Guard that restricts access to addresses that hold the specified spl-token.
 *
 * List of accounts required:
 *
 * 0. `[]` Token account holding the required amount.
 */

export type TokenGate = { amount: bigint; mint: PublicKey };

export type TokenGateArgs = { amount: number | bigint; mint: PublicKey };

export function getTokenGateSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<TokenGateArgs, TokenGate> {
  const s = context.serializer;
  return s.struct<TokenGate>(
    [
      ['amount', s.u64()],
      ['mint', s.publicKey()],
    ],
    { description: 'TokenGate' }
  ) as Serializer<TokenGateArgs, TokenGate>;
}
